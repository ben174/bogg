FORMAT: 1A
HOST: http://api.bo.gg/api

# bogg

Bo.gg is an open source calorie tracker. The API is designed to focus on 
simplicity - to make it easy for other applications to integrate with.

## Registration [/create/]

### Register a New User [POST]

You may register a new user using this action. It requires a fully
populated JSON obect with valid data, and returns your new user instance, 
complete with calculated daily calorie goals and HBE.

+ Request (application/json)

        {
            "username": "ben16",
            "email": "ben189@gmail.com",
            "password": "balls",
            "daily_weight_goal": 0.2,
            "height": 72,
            "weight": 270,
            "activity_factor": 1.2,
            "bogger": {
                "gender": "M",
                "birthdate": "1985-11-23",
                "auto_update_goal": true
            }
        }
        
+ Response 201 (application/json)


    + Body
    
                 
            {
                "username": "ben16",
                "email": "ben189@gmail.com",
                "bogger": {
                    "user": "ben16",
                    "gender": "M",
                    "birthdate": "1985-11-23",
                    "auto_update_goal": true,
                    "height": 72.0,
                    "weight": 270.0,
                    "activity_factor": 1.2,
                    "daily_weight_goal": 0.2,
                    "current_age": 30,
                    "current_hbe": 2950,
                    "current_bmr": 2458.5,
                    "current_calorie_goal": 2250.0
                }
            }
   
## Calorie Entries [/entries/]

### List All Calorie Entries [GET]

+ Response 200 (application/json)
    
            
        {
            "count": 1,
            "next": null,
            "previous": null,
            "results": [
                {
                    "entry_type": "C",
                    "calories": 300,
                    "note": "Silica Gel",
                    "dt_created": "2016-06-05T03:47:59.663Z",
                    "dt_occurred": "2016-06-05T03:47:58.159761Z",
                    "date": "2016-06-04"
                }
            ]
        }

### Create a New Calorie Entry [POST]

Create a new calorie entry using this action. `entry_type` must be either
`E` (Exercise) or `C` (Consumed). A note is required.

+ Request (application/json)

        {
            "entry_type": "E",
            "calories": 300,
            "note": "Ran from Police",
            "dt_occurred": "2016-06-05T03:47:58.159761Z"
        }

+ Response 201 (application/json)


    + Body
    
            {
                "entry_type": "E",
                "calories": 300,
                "note": "Ran from Police",
                "dt_created": "2016-06-06T03:51:24.785Z",
                "dt_occurred": "2016-06-05T03:47:58.159761Z",
                "date": "2016-06-05"
            }
            

## Daily Entries [/daily/]

### Retrieve Daily Status Entries [GET]

A read-only endpoint to retrieve information on daily status. This includes
aggregated calorie vlues and calories remaining.

+ Response 201 (application/json)

    + Body
    
                  
            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "date": "2016-06-04",
                        "calories_consumed": 300,
                        "calories_expended": 0,
                        "net_calories": 300,
                        "calories_remaining": null
                    },
                    {
                        "date": "2016-06-05",
                        "calories_consumed": 0,
                        "calories_expended": 300,
                        "net_calories": 300,
                        "calories_remaining": null
                    }
                ]
            }
            
## Goal Entries [/goals/]

### List All Goal Entries [GET]


Goals may change over time. Daily status should reflect the goal at the time
of the status. Just because I increased my daily weight loss goal today, 
shouldn't mean I failed on my goals for all previous days.


+ Response 200 (application/json)

        {
            "count": 1,
            "next": null,
            "previous": null,
            "results": [
                {
                    "date": "2016-06-05",
                    "daily_weight_goal": 0.28,
                    "dt_created": "2016-06-06T04:05:54.978Z"
                }
            ]
        }


### Create a New Goal Entry [POST]

Create a new goal using this action. The `daily_weight_goal` is in pounds,
but usually referred to by week. To calculate the daily goal, simply
divide the weekly goal by 7.

+ Request (application/json)

            {
                "date": "2016-06-05",
                "daily_weight_goal": 0.28,
                "dt_created": "2016-06-06T04:05:54.978Z"
            }

+ Response 201 (application/json)

    + Body
    
                               
            {
                "date": "2016-06-05",
                "daily_weight_goal": 0.28,
                "dt_created": "2016-06-06T04:05:54.978Z"
            }